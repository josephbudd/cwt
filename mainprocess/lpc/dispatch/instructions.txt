
ABOUT THE FILES IN THE FOLDER mainprocess/lpc/dispatch/.

  * dispatch.go contains func Do which dispatches the LPC ( Local Process Communications ) messages received from the renderer.
    Do not edit the file dispatch.go.
    In func Do, the messages are dispatched to the LPC message handlers here in this folder.

  Message handler files:

  * Log.go was generated by kickwasm when this framework was created.
    The file contains func handleLog(rxMessage *message.LogRendererToMainProcess, sending lpc.Sending)
      which processes the log message received from the renderer.
	You may edit the file if you need to.

  * CheckCopy.go was generated by kicklpc when you added the CheckCopy LPC message.
    The file contains func handleCheckCopy(rxmessage *message.CheckCopyRendererToMainProcess, sending lpc.Sending, eojing lpc.EOJer)
	  which must process the CheckCopy message received from the renderer.
	kicklpc created func handleCheckCopy void of any functionality so that it's functionality could to be coded.
	There fore, you may edit CheckCopy.go.

  * CheckKey.go was generated by kicklpc when you added the CheckKey LPC message.
    The file contains func handleCheckKey(rxmessage *message.CheckKeyRendererToMainProcess, sending lpc.Sending, eojing lpc.EOJer)
	  which must process the CheckKey message received from the renderer.
	kicklpc created func handleCheckKey void of any functionality so that it's functionality could to be coded.
	There fore, you may edit CheckKey.go.

  * GetCopyWPM.go was generated by kicklpc when you added the GetCopyWPM LPC message.
    The file contains func handleGetCopyWPM(rxmessage *message.GetCopyWPMRendererToMainProcess, sending lpc.Sending, eojing lpc.EOJer)
	  which must process the GetCopyWPM message received from the renderer.
	kicklpc created func handleGetCopyWPM void of any functionality so that it's functionality could to be coded.
	There fore, you may edit GetCopyWPM.go.

  * GetKeyCodes.go was generated by kicklpc when you added the GetKeyCodes LPC message.
    The file contains func handleGetKeyCodes(rxmessage *message.GetKeyCodesRendererToMainProcess, sending lpc.Sending, eojing lpc.EOJer)
	  which must process the GetKeyCodes message received from the renderer.
	kicklpc created func handleGetKeyCodes void of any functionality so that it's functionality could to be coded.
	There fore, you may edit GetKeyCodes.go.

  * GetKeyWPM.go was generated by kicklpc when you added the GetKeyWPM LPC message.
    The file contains func handleGetKeyWPM(rxmessage *message.GetKeyWPMRendererToMainProcess, sending lpc.Sending, eojing lpc.EOJer)
	  which must process the GetKeyWPM message received from the renderer.
	kicklpc created func handleGetKeyWPM void of any functionality so that it's functionality could to be coded.
	There fore, you may edit GetKeyWPM.go.

  * GetTextToCopy.go was generated by kicklpc when you added the GetTextToCopy LPC message.
    The file contains func handleGetTextToCopy(rxmessage *message.GetTextToCopyRendererToMainProcess, sending lpc.Sending, eojing lpc.EOJer)
	  which must process the GetTextToCopy message received from the renderer.
	kicklpc created func handleGetTextToCopy void of any functionality so that it's functionality could to be coded.
	There fore, you may edit GetTextToCopy.go.

  * GetTextToKey.go was generated by kicklpc when you added the GetTextToKey LPC message.
    The file contains func handleGetTextToKey(rxmessage *message.GetTextToKeyRendererToMainProcess, sending lpc.Sending, eojing lpc.EOJer)
	  which must process the GetTextToKey message received from the renderer.
	kicklpc created func handleGetTextToKey void of any functionality so that it's functionality could to be coded.
	There fore, you may edit GetTextToKey.go.

  * Key.go was generated by kicklpc when you added the Key LPC message.
    The file contains func handleKey(rxmessage *message.KeyRendererToMainProcess, sending lpc.Sending, eojing lpc.EOJer)
	  which must process the Key message received from the renderer.
	kicklpc created func handleKey void of any functionality so that it's functionality could to be coded.
	There fore, you may edit Key.go.

  * Metronome.go was generated by kicklpc when you added the Metronome LPC message.
    The file contains func handleMetronome(rxmessage *message.MetronomeRendererToMainProcess, sending lpc.Sending, eojing lpc.EOJer)
	  which must process the Metronome message received from the renderer.
	kicklpc created func handleMetronome void of any functionality so that it's functionality could to be coded.
	There fore, you may edit Metronome.go.

  * UpdateCopyWPM.go was generated by kicklpc when you added the UpdateCopyWPM LPC message.
    The file contains func handleUpdateCopyWPM(rxmessage *message.UpdateCopyWPMRendererToMainProcess, sending lpc.Sending, eojing lpc.EOJer)
	  which must process the UpdateCopyWPM message received from the renderer.
	kicklpc created func handleUpdateCopyWPM void of any functionality so that it's functionality could to be coded.
	There fore, you may edit UpdateCopyWPM.go.

  * UpdateKeyCode.go was generated by kicklpc when you added the UpdateKeyCode LPC message.
    The file contains func handleUpdateKeyCode(rxmessage *message.UpdateKeyCodeRendererToMainProcess, sending lpc.Sending, eojing lpc.EOJer)
	  which must process the UpdateKeyCode message received from the renderer.
	kicklpc created func handleUpdateKeyCode void of any functionality so that it's functionality could to be coded.
	There fore, you may edit UpdateKeyCode.go.

  * UpdateKeyWPM.go was generated by kicklpc when you added the UpdateKeyWPM LPC message.
    The file contains func handleUpdateKeyWPM(rxmessage *message.UpdateKeyWPMRendererToMainProcess, sending lpc.Sending, eojing lpc.EOJer)
	  which must process the UpdateKeyWPM message received from the renderer.
	kicklpc created func handleUpdateKeyWPM void of any functionality so that it's functionality could to be coded.
	There fore, you may edit UpdateKeyWPM.go.

ABOUT THE FILES IN THE FOLDER domain/lpc/message/.

* Log.go was generated by kickwasm when this framework was created.
  The file contains the types of the 2 Log messages.
	1. LogRendererToMainProcess is the message that the renderer sends to the main process.
	2. LogMainProcessToRenderer is the message that the main process sends to the renderer.

* CheckCopy.go was generated by kicklpc.
  The file contains the types of the 2 CheckCopy messages.
	1. CheckCopyRendererToMainProcess is the message that the renderer sends to the main process.
	2. CheckCopyMainProcessToRenderer is the message that the main process sends to the renderer.
  kicklpc created the 2 CheckCopy message types with little or no structure so that their structure could to be completed.
  There fore, you may edit CheckCopy.go.

* CheckKey.go was generated by kicklpc.
  The file contains the types of the 2 CheckKey messages.
	1. CheckKeyRendererToMainProcess is the message that the renderer sends to the main process.
	2. CheckKeyMainProcessToRenderer is the message that the main process sends to the renderer.
  kicklpc created the 2 CheckKey message types with little or no structure so that their structure could to be completed.
  There fore, you may edit CheckKey.go.

* GetCopyWPM.go was generated by kicklpc.
  The file contains the types of the 2 GetCopyWPM messages.
	1. GetCopyWPMRendererToMainProcess is the message that the renderer sends to the main process.
	2. GetCopyWPMMainProcessToRenderer is the message that the main process sends to the renderer.
  kicklpc created the 2 GetCopyWPM message types with little or no structure so that their structure could to be completed.
  There fore, you may edit GetCopyWPM.go.

* GetKeyCodes.go was generated by kicklpc.
  The file contains the types of the 2 GetKeyCodes messages.
	1. GetKeyCodesRendererToMainProcess is the message that the renderer sends to the main process.
	2. GetKeyCodesMainProcessToRenderer is the message that the main process sends to the renderer.
  kicklpc created the 2 GetKeyCodes message types with little or no structure so that their structure could to be completed.
  There fore, you may edit GetKeyCodes.go.

* GetKeyWPM.go was generated by kicklpc.
  The file contains the types of the 2 GetKeyWPM messages.
	1. GetKeyWPMRendererToMainProcess is the message that the renderer sends to the main process.
	2. GetKeyWPMMainProcessToRenderer is the message that the main process sends to the renderer.
  kicklpc created the 2 GetKeyWPM message types with little or no structure so that their structure could to be completed.
  There fore, you may edit GetKeyWPM.go.

* GetTextToCopy.go was generated by kicklpc.
  The file contains the types of the 2 GetTextToCopy messages.
	1. GetTextToCopyRendererToMainProcess is the message that the renderer sends to the main process.
	2. GetTextToCopyMainProcessToRenderer is the message that the main process sends to the renderer.
  kicklpc created the 2 GetTextToCopy message types with little or no structure so that their structure could to be completed.
  There fore, you may edit GetTextToCopy.go.

* GetTextToKey.go was generated by kicklpc.
  The file contains the types of the 2 GetTextToKey messages.
	1. GetTextToKeyRendererToMainProcess is the message that the renderer sends to the main process.
	2. GetTextToKeyMainProcessToRenderer is the message that the main process sends to the renderer.
  kicklpc created the 2 GetTextToKey message types with little or no structure so that their structure could to be completed.
  There fore, you may edit GetTextToKey.go.

* Key.go was generated by kicklpc.
  The file contains the types of the 2 Key messages.
	1. KeyRendererToMainProcess is the message that the renderer sends to the main process.
	2. KeyMainProcessToRenderer is the message that the main process sends to the renderer.
  kicklpc created the 2 Key message types with little or no structure so that their structure could to be completed.
  There fore, you may edit Key.go.

* Metronome.go was generated by kicklpc.
  The file contains the types of the 2 Metronome messages.
	1. MetronomeRendererToMainProcess is the message that the renderer sends to the main process.
	2. MetronomeMainProcessToRenderer is the message that the main process sends to the renderer.
  kicklpc created the 2 Metronome message types with little or no structure so that their structure could to be completed.
  There fore, you may edit Metronome.go.

* UpdateCopyWPM.go was generated by kicklpc.
  The file contains the types of the 2 UpdateCopyWPM messages.
	1. UpdateCopyWPMRendererToMainProcess is the message that the renderer sends to the main process.
	2. UpdateCopyWPMMainProcessToRenderer is the message that the main process sends to the renderer.
  kicklpc created the 2 UpdateCopyWPM message types with little or no structure so that their structure could to be completed.
  There fore, you may edit UpdateCopyWPM.go.

* UpdateKeyCode.go was generated by kicklpc.
  The file contains the types of the 2 UpdateKeyCode messages.
	1. UpdateKeyCodeRendererToMainProcess is the message that the renderer sends to the main process.
	2. UpdateKeyCodeMainProcessToRenderer is the message that the main process sends to the renderer.
  kicklpc created the 2 UpdateKeyCode message types with little or no structure so that their structure could to be completed.
  There fore, you may edit UpdateKeyCode.go.

* UpdateKeyWPM.go was generated by kicklpc.
  The file contains the types of the 2 UpdateKeyWPM messages.
	1. UpdateKeyWPMRendererToMainProcess is the message that the renderer sends to the main process.
	2. UpdateKeyWPMMainProcessToRenderer is the message that the main process sends to the renderer.
  kicklpc created the 2 UpdateKeyWPM message types with little or no structure so that their structure could to be completed.
  There fore, you may edit UpdateKeyWPM.go.

MANAGING LPC MESSAGES WITH kicklpc.

* Use kicklpc in this application's root folder:
  $ cd github.com/josephbudd/cwt/

* Listing all of the messages:
  $ kicklpc -l
  1. kicklpc would
    * Display the names of each LPC message.

* Adding a message:
  $ kicklpc -add UpdateCustomer
  1. kicklpc would
    * Add the file domain/lpc/UpdateCustomer.go
    * Add the file mainprocess/lpc/dispatch/UpdateCustomer.go
    * Update the file mainprocess/lpc/dispatch/dispatch.go
  2. You would need to
	* Complete the message definitions in domain/lpc/UpdateCustomer.go
	* Complete the func handleUpdateCustomer in mainprocess/lpc/dispatch/UpdateCustomer.go

* Deleting a message:
  $ kicklpc -delete-forever UpdateCustomer
  1. kicklpc would
    * Delete the file domain/lpc/UpdateCustomer.go
    * Delete the file mainprocess/lpc/dispatch/UpdateCustomer.go
    * Update the file mainprocess/lpc/dispatch/dispatch.go
